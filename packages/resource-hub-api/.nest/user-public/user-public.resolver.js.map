{"version":3,"sources":["../../src/user-public/user-public.resolver.ts"],"sourcesContent":["import { Resolver, Query, Mutation, Args, Int } from '@nestjs/graphql';\nimport { UserPublicService } from './user-public.service';\nimport { UserPublic } from './entities/user-public.entity';\nimport { CreateUserPublicInput } from './dto/create-user-public.input';\nimport { UpdateUserPublicInput } from './dto/update-user-public.input';\n\n@Resolver(() => UserPublic)\nexport class UserPublicResolver {\n    constructor(private readonly userPublicService: UserPublicService) {}\n\n    @Mutation(() => UserPublic)\n    createUserPublic(@Args('createUserPublicInput') createUserPublicInput: CreateUserPublicInput) {\n        return this.userPublicService.create(createUserPublicInput);\n    }\n\n    @Query(() => [UserPublic], { name: 'userPublic' })\n    findAll() {\n        return this.userPublicService.findAll();\n    }\n\n    @Query(() => UserPublic, { name: 'userPublic' })\n    findOne(@Args('id', { type: () => Int }) id: number) {\n        return this.userPublicService.findOne(id);\n    }\n\n    @Mutation(() => UserPublic)\n    updateUserPublic(@Args('updateUserPublicInput') updateUserPublicInput: UpdateUserPublicInput) {\n        return this.userPublicService.update(updateUserPublicInput.id, updateUserPublicInput);\n    }\n\n    @Mutation(() => UserPublic)\n    removeUserPublic(@Args('id', { type: () => Int }) id: number) {\n        return this.userPublicService.remove(id);\n    }\n}\n"],"names":["UserPublicResolver","createUserPublic","createUserPublicInput","userPublicService","create","findAll","findOne","id","updateUserPublic","updateUserPublicInput","update","removeUserPublic","remove","constructor","Mutation","UserPublic","Args","Query","name","type","Int","Resolver"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAOaA;;;eAAAA;;;yBAPwC;mCACnB;kCACP;uCACW;uCACA;;;;;;;;;;;;;;;AAG/B,IAAA,AAAMA,qBAAN,MAAMA;IAITC,iBAAiB,AAA+BC,qBAA4C,EAAE;QAC1F,OAAO,IAAI,CAACC,iBAAiB,CAACC,MAAM,CAACF;IACzC;IAGAG,UAAU;QACN,OAAO,IAAI,CAACF,iBAAiB,CAACE,OAAO;IACzC;IAGAC,QAAQ,AAAiCC,EAAU,EAAE;QACjD,OAAO,IAAI,CAACJ,iBAAiB,CAACG,OAAO,CAACC;IAC1C;IAGAC,iBAAiB,AAA+BC,qBAA4C,EAAE;QAC1F,OAAO,IAAI,CAACN,iBAAiB,CAACO,MAAM,CAACD,sBAAsBF,EAAE,EAAEE;IACnE;IAGAE,iBAAiB,AAAiCJ,EAAU,EAAE;QAC1D,OAAO,IAAI,CAACJ,iBAAiB,CAACS,MAAM,CAACL;IACzC;IAzBAM,YAAY,AAAiBV,iBAAoC,CAAE;aAAtCA,oBAAAA;IAAuC;AA0BxE;;IAxBKW,IAAAA,iBAAQ,EAAC,IAAMC,4BAAU;IACRC,aAAAA,IAAAA,aAAI,EAAC;;;eAAgD,4CAAqB,4BAArB,4CAAqB;;;GAJnFhB;;IAQRiB,IAAAA,cAAK,EAAC,IAAM;YAACF,4BAAU;SAAC,EAAE;QAAEG,MAAM;IAAa;;;;GARvClB;;IAaRiB,IAAAA,cAAK,EAAC,IAAMF,4BAAU,EAAE;QAAEG,MAAM;IAAa;IACrCF,aAAAA,IAAAA,aAAI,EAAC,MAAM;QAAEG,MAAM,IAAMC,YAAG;IAAC;;;;;;GAd7BpB;;IAkBRc,IAAAA,iBAAQ,EAAC,IAAMC,4BAAU;IACRC,aAAAA,IAAAA,aAAI,EAAC;;;eAAgD,4CAAqB,4BAArB,4CAAqB;;;GAnBnFhB;;IAuBRc,IAAAA,iBAAQ,EAAC,IAAMC,4BAAU;IACRC,aAAAA,IAAAA,aAAI,EAAC,MAAM;QAAEG,MAAM,IAAMC,YAAG;IAAC;;;;;;GAxBtCpB;AAAAA;IADZqB,IAAAA,iBAAQ,EAAC,IAAMN,4BAAU;;;eAE0B,oCAAiB,4BAAjB,oCAAiB;;GADxDf"}